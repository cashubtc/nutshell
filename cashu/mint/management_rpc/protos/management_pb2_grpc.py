# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc

import cashu.mint.management_rpc.protos.management_pb2 as management__pb2

GRPC_GENERATED_VERSION = '1.69.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + ' but the generated code in management_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class MintStub(object):
    """The Mint service provides a gRPC interface for managing a Cashu mint.
    It allows for updating mint information, managing payment methods (NUT-04 and NUT-05),
    handling quotes, rotating keysets, and configuring fees and authentication limits.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetInfo = channel.unary_unary(
                '/cashu.Mint/GetInfo',
                request_serializer=management__pb2.GetInfoRequest.SerializeToString,
                response_deserializer=management__pb2.GetInfoResponse.FromString,
                _registered_method=True)
        self.UpdateMotd = channel.unary_unary(
                '/cashu.Mint/UpdateMotd',
                request_serializer=management__pb2.UpdateMotdRequest.SerializeToString,
                response_deserializer=management__pb2.UpdateResponse.FromString,
                _registered_method=True)
        self.UpdateShortDescription = channel.unary_unary(
                '/cashu.Mint/UpdateShortDescription',
                request_serializer=management__pb2.UpdateDescriptionRequest.SerializeToString,
                response_deserializer=management__pb2.UpdateResponse.FromString,
                _registered_method=True)
        self.UpdateLongDescription = channel.unary_unary(
                '/cashu.Mint/UpdateLongDescription',
                request_serializer=management__pb2.UpdateDescriptionRequest.SerializeToString,
                response_deserializer=management__pb2.UpdateResponse.FromString,
                _registered_method=True)
        self.UpdateIconUrl = channel.unary_unary(
                '/cashu.Mint/UpdateIconUrl',
                request_serializer=management__pb2.UpdateIconUrlRequest.SerializeToString,
                response_deserializer=management__pb2.UpdateResponse.FromString,
                _registered_method=True)
        self.UpdateName = channel.unary_unary(
                '/cashu.Mint/UpdateName',
                request_serializer=management__pb2.UpdateNameRequest.SerializeToString,
                response_deserializer=management__pb2.UpdateResponse.FromString,
                _registered_method=True)
        self.AddUrl = channel.unary_unary(
                '/cashu.Mint/AddUrl',
                request_serializer=management__pb2.UpdateUrlRequest.SerializeToString,
                response_deserializer=management__pb2.UpdateResponse.FromString,
                _registered_method=True)
        self.RemoveUrl = channel.unary_unary(
                '/cashu.Mint/RemoveUrl',
                request_serializer=management__pb2.UpdateUrlRequest.SerializeToString,
                response_deserializer=management__pb2.UpdateResponse.FromString,
                _registered_method=True)
        self.AddContact = channel.unary_unary(
                '/cashu.Mint/AddContact',
                request_serializer=management__pb2.UpdateContactRequest.SerializeToString,
                response_deserializer=management__pb2.UpdateResponse.FromString,
                _registered_method=True)
        self.RemoveContact = channel.unary_unary(
                '/cashu.Mint/RemoveContact',
                request_serializer=management__pb2.UpdateContactRequest.SerializeToString,
                response_deserializer=management__pb2.UpdateResponse.FromString,
                _registered_method=True)
        self.GetNut04Quote = channel.unary_unary(
                '/cashu.Mint/GetNut04Quote',
                request_serializer=management__pb2.GetNut04QuoteRequest.SerializeToString,
                response_deserializer=management__pb2.GetNut04QuoteResponse.FromString,
                _registered_method=True)
        self.GetNut05Quote = channel.unary_unary(
                '/cashu.Mint/GetNut05Quote',
                request_serializer=management__pb2.GetNut05QuoteRequest.SerializeToString,
                response_deserializer=management__pb2.GetNut05QuoteResponse.FromString,
                _registered_method=True)
        self.UpdateNut04 = channel.unary_unary(
                '/cashu.Mint/UpdateNut04',
                request_serializer=management__pb2.UpdateNut04Request.SerializeToString,
                response_deserializer=management__pb2.UpdateResponse.FromString,
                _registered_method=True)
        self.UpdateNut05 = channel.unary_unary(
                '/cashu.Mint/UpdateNut05',
                request_serializer=management__pb2.UpdateNut05Request.SerializeToString,
                response_deserializer=management__pb2.UpdateResponse.FromString,
                _registered_method=True)
        self.UpdateQuoteTtl = channel.unary_unary(
                '/cashu.Mint/UpdateQuoteTtl',
                request_serializer=management__pb2.UpdateQuoteTtlRequest.SerializeToString,
                response_deserializer=management__pb2.UpdateResponse.FromString,
                _registered_method=True)
        self.UpdateNut04Quote = channel.unary_unary(
                '/cashu.Mint/UpdateNut04Quote',
                request_serializer=management__pb2.UpdateQuoteRequest.SerializeToString,
                response_deserializer=management__pb2.UpdateResponse.FromString,
                _registered_method=True)
        self.UpdateNut05Quote = channel.unary_unary(
                '/cashu.Mint/UpdateNut05Quote',
                request_serializer=management__pb2.UpdateQuoteRequest.SerializeToString,
                response_deserializer=management__pb2.UpdateResponse.FromString,
                _registered_method=True)
        self.RotateNextKeyset = channel.unary_unary(
                '/cashu.Mint/RotateNextKeyset',
                request_serializer=management__pb2.RotateNextKeysetRequest.SerializeToString,
                response_deserializer=management__pb2.RotateNextKeysetResponse.FromString,
                _registered_method=True)
        self.UpdateLightningFee = channel.unary_unary(
                '/cashu.Mint/UpdateLightningFee',
                request_serializer=management__pb2.UpdateLightningFeeRequest.SerializeToString,
                response_deserializer=management__pb2.UpdateResponse.FromString,
                _registered_method=True)
        self.UpdateAuthLimits = channel.unary_unary(
                '/cashu.Mint/UpdateAuthLimits',
                request_serializer=management__pb2.UpdateAuthLimitsRequest.SerializeToString,
                response_deserializer=management__pb2.UpdateResponse.FromString,
                _registered_method=True)


class MintServicer(object):
    """The Mint service provides a gRPC interface for managing a Cashu mint.
    It allows for updating mint information, managing payment methods (NUT-04 and NUT-05),
    handling quotes, rotating keysets, and configuring fees and authentication limits.
    """

    def GetInfo(self, request, context):
        """GetInfo retrieves general information about the mint.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateMotd(self, request, context):
        """UpdateMotd updates the Message of the Day (MOTD) for the mint.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateShortDescription(self, request, context):
        """UpdateShortDescription updates the short description of the mint.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateLongDescription(self, request, context):
        """UpdateLongDescription updates the long description of the mint.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateIconUrl(self, request, context):
        """UpdateIconUrl updates the URL for the mint's icon.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateName(self, request, context):
        """UpdateName updates the name of the mint.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddUrl(self, request, context):
        """AddUrl adds a new URL associated with the mint.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveUrl(self, request, context):
        """RemoveUrl removes an existing URL associated with the mint.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddContact(self, request, context):
        """AddContact adds a new contact method for the mint.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveContact(self, request, context):
        """RemoveContact removes an existing contact method for the mint.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNut04Quote(self, request, context):
        """GetNut04Quote retrieves a specific NUT-04 (minting) quote by its ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNut05Quote(self, request, context):
        """GetNut05Quote retrieves a specific NUT-05 (melting) quote by its ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateNut04(self, request, context):
        """UpdateNut04 configures a NUT-04 (minting) payment method.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateNut05(self, request, context):
        """UpdateNut05 configures a NUT-05 (melting) payment method.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateQuoteTtl(self, request, context):
        """UpdateQuoteTtl updates the Time-To-Live (TTL) for minting and melting quotes.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateNut04Quote(self, request, context):
        """UpdateNut04Quote updates the state of a specific NUT-04 (minting) quote.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateNut05Quote(self, request, context):
        """UpdateNut05Quote updates the state of a specific NUT-05 (melting) quote.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RotateNextKeyset(self, request, context):
        """RotateNextKeyset initiates the rotation to a new keyset for a given unit.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateLightningFee(self, request, context):
        """UpdateLightningFee updates the lightning network fee configuration for the mint.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAuthLimits(self, request, context):
        """UpdateAuthLimits updates the authentication rate limits for the mint.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MintServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInfo,
                    request_deserializer=management__pb2.GetInfoRequest.FromString,
                    response_serializer=management__pb2.GetInfoResponse.SerializeToString,
            ),
            'UpdateMotd': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateMotd,
                    request_deserializer=management__pb2.UpdateMotdRequest.FromString,
                    response_serializer=management__pb2.UpdateResponse.SerializeToString,
            ),
            'UpdateShortDescription': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateShortDescription,
                    request_deserializer=management__pb2.UpdateDescriptionRequest.FromString,
                    response_serializer=management__pb2.UpdateResponse.SerializeToString,
            ),
            'UpdateLongDescription': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateLongDescription,
                    request_deserializer=management__pb2.UpdateDescriptionRequest.FromString,
                    response_serializer=management__pb2.UpdateResponse.SerializeToString,
            ),
            'UpdateIconUrl': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateIconUrl,
                    request_deserializer=management__pb2.UpdateIconUrlRequest.FromString,
                    response_serializer=management__pb2.UpdateResponse.SerializeToString,
            ),
            'UpdateName': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateName,
                    request_deserializer=management__pb2.UpdateNameRequest.FromString,
                    response_serializer=management__pb2.UpdateResponse.SerializeToString,
            ),
            'AddUrl': grpc.unary_unary_rpc_method_handler(
                    servicer.AddUrl,
                    request_deserializer=management__pb2.UpdateUrlRequest.FromString,
                    response_serializer=management__pb2.UpdateResponse.SerializeToString,
            ),
            'RemoveUrl': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveUrl,
                    request_deserializer=management__pb2.UpdateUrlRequest.FromString,
                    response_serializer=management__pb2.UpdateResponse.SerializeToString,
            ),
            'AddContact': grpc.unary_unary_rpc_method_handler(
                    servicer.AddContact,
                    request_deserializer=management__pb2.UpdateContactRequest.FromString,
                    response_serializer=management__pb2.UpdateResponse.SerializeToString,
            ),
            'RemoveContact': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveContact,
                    request_deserializer=management__pb2.UpdateContactRequest.FromString,
                    response_serializer=management__pb2.UpdateResponse.SerializeToString,
            ),
            'GetNut04Quote': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNut04Quote,
                    request_deserializer=management__pb2.GetNut04QuoteRequest.FromString,
                    response_serializer=management__pb2.GetNut04QuoteResponse.SerializeToString,
            ),
            'GetNut05Quote': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNut05Quote,
                    request_deserializer=management__pb2.GetNut05QuoteRequest.FromString,
                    response_serializer=management__pb2.GetNut05QuoteResponse.SerializeToString,
            ),
            'UpdateNut04': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateNut04,
                    request_deserializer=management__pb2.UpdateNut04Request.FromString,
                    response_serializer=management__pb2.UpdateResponse.SerializeToString,
            ),
            'UpdateNut05': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateNut05,
                    request_deserializer=management__pb2.UpdateNut05Request.FromString,
                    response_serializer=management__pb2.UpdateResponse.SerializeToString,
            ),
            'UpdateQuoteTtl': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateQuoteTtl,
                    request_deserializer=management__pb2.UpdateQuoteTtlRequest.FromString,
                    response_serializer=management__pb2.UpdateResponse.SerializeToString,
            ),
            'UpdateNut04Quote': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateNut04Quote,
                    request_deserializer=management__pb2.UpdateQuoteRequest.FromString,
                    response_serializer=management__pb2.UpdateResponse.SerializeToString,
            ),
            'UpdateNut05Quote': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateNut05Quote,
                    request_deserializer=management__pb2.UpdateQuoteRequest.FromString,
                    response_serializer=management__pb2.UpdateResponse.SerializeToString,
            ),
            'RotateNextKeyset': grpc.unary_unary_rpc_method_handler(
                    servicer.RotateNextKeyset,
                    request_deserializer=management__pb2.RotateNextKeysetRequest.FromString,
                    response_serializer=management__pb2.RotateNextKeysetResponse.SerializeToString,
            ),
            'UpdateLightningFee': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateLightningFee,
                    request_deserializer=management__pb2.UpdateLightningFeeRequest.FromString,
                    response_serializer=management__pb2.UpdateResponse.SerializeToString,
            ),
            'UpdateAuthLimits': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAuthLimits,
                    request_deserializer=management__pb2.UpdateAuthLimitsRequest.FromString,
                    response_serializer=management__pb2.UpdateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cashu.Mint', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cashu.Mint', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Mint(object):
    """The Mint service provides a gRPC interface for managing a Cashu mint.
    It allows for updating mint information, managing payment methods (NUT-04 and NUT-05),
    handling quotes, rotating keysets, and configuring fees and authentication limits.
    """

    @staticmethod
    def GetInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cashu.Mint/GetInfo',
            management__pb2.GetInfoRequest.SerializeToString,
            management__pb2.GetInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateMotd(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cashu.Mint/UpdateMotd',
            management__pb2.UpdateMotdRequest.SerializeToString,
            management__pb2.UpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateShortDescription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cashu.Mint/UpdateShortDescription',
            management__pb2.UpdateDescriptionRequest.SerializeToString,
            management__pb2.UpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateLongDescription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cashu.Mint/UpdateLongDescription',
            management__pb2.UpdateDescriptionRequest.SerializeToString,
            management__pb2.UpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateIconUrl(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cashu.Mint/UpdateIconUrl',
            management__pb2.UpdateIconUrlRequest.SerializeToString,
            management__pb2.UpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cashu.Mint/UpdateName',
            management__pb2.UpdateNameRequest.SerializeToString,
            management__pb2.UpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddUrl(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cashu.Mint/AddUrl',
            management__pb2.UpdateUrlRequest.SerializeToString,
            management__pb2.UpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveUrl(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cashu.Mint/RemoveUrl',
            management__pb2.UpdateUrlRequest.SerializeToString,
            management__pb2.UpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddContact(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cashu.Mint/AddContact',
            management__pb2.UpdateContactRequest.SerializeToString,
            management__pb2.UpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveContact(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cashu.Mint/RemoveContact',
            management__pb2.UpdateContactRequest.SerializeToString,
            management__pb2.UpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetNut04Quote(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cashu.Mint/GetNut04Quote',
            management__pb2.GetNut04QuoteRequest.SerializeToString,
            management__pb2.GetNut04QuoteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetNut05Quote(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cashu.Mint/GetNut05Quote',
            management__pb2.GetNut05QuoteRequest.SerializeToString,
            management__pb2.GetNut05QuoteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateNut04(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cashu.Mint/UpdateNut04',
            management__pb2.UpdateNut04Request.SerializeToString,
            management__pb2.UpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateNut05(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cashu.Mint/UpdateNut05',
            management__pb2.UpdateNut05Request.SerializeToString,
            management__pb2.UpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateQuoteTtl(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cashu.Mint/UpdateQuoteTtl',
            management__pb2.UpdateQuoteTtlRequest.SerializeToString,
            management__pb2.UpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateNut04Quote(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cashu.Mint/UpdateNut04Quote',
            management__pb2.UpdateQuoteRequest.SerializeToString,
            management__pb2.UpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateNut05Quote(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cashu.Mint/UpdateNut05Quote',
            management__pb2.UpdateQuoteRequest.SerializeToString,
            management__pb2.UpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RotateNextKeyset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cashu.Mint/RotateNextKeyset',
            management__pb2.RotateNextKeysetRequest.SerializeToString,
            management__pb2.RotateNextKeysetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateLightningFee(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cashu.Mint/UpdateLightningFee',
            management__pb2.UpdateLightningFeeRequest.SerializeToString,
            management__pb2.UpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateAuthLimits(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cashu.Mint/UpdateAuthLimits',
            management__pb2.UpdateAuthLimitsRequest.SerializeToString,
            management__pb2.UpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
